---
import { getCollection } from 'astro:content';
import ProjectItem from './ProjectItem.astro';

const featuredProjects = await getCollection('projects', ({ data }) => {
  return data.published === true && data.featured === true;
});

const sortedFeaturedProjects = featuredProjects.sort((a, b) => {
  if (a.data.order !== undefined && b.data.order !== undefined) {
    return a.data.order - b.data.order;
  }
  return b.data.date.valueOf() - a.data.date.valueOf();
});

const projectsToShow = sortedFeaturedProjects.slice(0, 3);

const images = import.meta.glob('/src/assets/images/**/*');

const getImageSrc = async (imagePath: string) => {
  if (!imagePath) return null;
  const fullPath = `/src${imagePath}`;
  if (fullPath in images) {
    const imageModule = await images[fullPath]();
    return (imageModule as any).default;
  }
  return null;
};
---

{
  projectsToShow.length > 0 && (
    <section class="w-full py-24">
      <div class="max-w-6xl mx-auto px-4">
        <div class="text-center mb-12">
          <h2 class="text-3xl sm:text-4xl font-bold text-zinc-100">
            Featured Projects
          </h2>
          <p class="text-zinc-400 mt-2">
            A selection of my favorite and most recent work.
          </p>
        </div>
        <ul class="grid grid-cols-1 md:grid-cols-3 gap-8">
          {projectsToShow.map(async (project) => {
            const imageSrc = project.data.imageUrl ? await getImageSrc(project.data.imageUrl) : null;
            return <ProjectItem projectItem={project} imageSrc={imageSrc} />;
          })}
        </ul>
        {
          sortedFeaturedProjects.length > projectsToShow.length && (
            <div class="text-center mt-12">
              <a
                href="/projects/"
                class="inline-block bg-sky-600 hover:bg-sky-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors"
              >
                View All Projects
              </a>
            </div>
          )
        }
      </div>
    </section>
  )
}